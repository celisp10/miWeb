----------------------------

Comandos para hacer un stage con git
notas: El stage en realidad es un "lugar" en el que se quedan los Comandos
sin ejecutarse, luego allí con un add se ejecutan de verdad. Osea que 
cuando se elimina o se hace una actualización de un archivo primero se envia
a stage y luego en stage se elimina o se hace el commit por completo.

Se usa para ingresar todos los archivos (No es un buen uso)
git add archivo

Ejemplo
git add index.html


git add .txt 

Ejemplo
git add .txt

----------------------------

Comando para hacer un commit

git commit -m <mensaje con sentido del commit>

Ejemplo
git commit -m "Primer commit"
----------------------------

Sirve para ver archivos dentro de la carpeta

ls 

----------------------------


Comando para eliminar archivos (de git)
notas: Primero se ejecuta el comando el cual lo mandará a stage,
luego con git add lo tiene que establecer (hacer que se elimine de verdad)

rm <archivo a eliminar>

Ejemplo
rm index.html


OTRA FORMA DE ELIMINAR MÁS EFICIENTE
notas: Esta forma elimina de una vez por completo el archivo
git rm <archivo>

Ejemplo
git rm index.html


----------------------------


Comando para recuperar un archivo eliminado
notas: El archivo debe de encontrarse en stage para poder ser recuperado 
si ya fué eliminado por completo no funcionará.
git restore <archivo>


----------------------------

Comando para cambia (actualizar) el nombre de un archivo
mv <Nombre (actual) del archivo> <Nombre que se decea agregar>

Ejemplo
mv index.html prueba.html


----------------------------


Es un archivo que nos sirve para indicar uno archivo y/o carpetas que git
debe ignorar
notas:En el archivo solo se tiene que ingresar el nombre del archivo o
carpeta que se decea ignorar
.gitignore


----------------------------


Sirve para ver el estado en los archivos con git
git status

OTRA FORMA
Sirve para solo recibir informaciona al respecto de los archivo o carpetas
y no tanta información como con <git status>.
Si aparece algun archivo en rojo significa que aun no se encuentra en stage
si aparece en verde significa que falta el commit y si no aparece nada significa
que ya se hizo el commit o no hay nada para modificar
git status -s

----------------------------


Ver los cambios que se tienen que hacer (que aun no se han hecho)
notas: Para salir de esto se oprime la letra q
git diff


----------------------------


Sirve para ver los cambios que están listos para ser comprometidos
notas: Para salir de esto se oprime la letra q
git diff --staged


----------------------------


Sirve para ver el historial de los commits hechos con información como el nombre
fecha y hora 
git log

OTRA FORMA
Sirve para ver los commits pero sin tanta información y con un id del commit
git log --oneline



----------------------------


----------------------------


Sirve para saber en que rama se encuentra
git branch


----------------------------


Sirve para crear una nueva rama (se usan para pruebas)
git checkout -b <nombre de la rama>

Ejemplo
git checkout -b ramab


----------------------------


Sirve para cambiarse de una rama a otra rama
git checkout <nombre de la rama>

Ejemplo
git checkout master



